@model ContractVM
@{
    ViewData["Title"] = "Contract";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="app-main__inner">
    <div class="app-page-title">
        <div class="page-title-wrapper">
            <div class="page-title-heading">
                <div class="page-title-icon">
                    <i class="lnr-bookmark icon-gradient bg-premium-dark"></i>
                </div>
                <div>
                    <span class="text-primary"><b>Contracts</b></span>
                </div>
            </div>
            <div class="page-title-actions">
                <div class="d-inline-block dropdown">
                    <button id="button-excel" class="btn btn-success">
                        <i class="fa-regular fa-file-excel" style="color: #ffffff;"></i>
                        Export
                    </button>

                    <button type="button" class="btn-shadow btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
                        + Add product
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart Controls -->
    <div class="row mb-3">
        <div class="col-2">
            <label><b>Chart Category</b></label>
            <select id="ChartCategory" class="form-control">
                <option selected>--Select Category--</option>
                <option value="annual">Annual</option>
                <option value="monthly">Monthly</option>
            </select>
        </div>

        <div class="col-2">
            <label><b>Chart Type</b></label>
            <select id="ChartType" class="form-control" disabled>
                <option selected>--Select Type--</option>
            </select>
        </div>

        <div class="col-auto align-self-end">
            <button id="ShowGraphBtn" class="btn btn-primary">Show Graph</button>
            <button id="RemoveGraphBtn" class="btn btn-danger">Remove Graph</button>
        </div>
    </div>


    <!-- Chart Container (hidden by default) -->
    <div id="ChartView" style="display: none;">
        <canvas id="myChart" style="max-width:750px; max-height:400px;"></canvas>
    </div>

    <!-- Product Table -->
    <div class="main-card mb-3 card">
        <div class="card-body">

            <div class="mb-3 row">
                <div class="col-md-4">
                    <label for="nameSearch" class="form-label">Search by Name:</label>
                    <input type="text" id="nameSearch" class="form-control" placeholder="Package name..." />
                </div>
                <div class="col-md-4">
                    <label for="descriptionSearch" class="form-label">Search by Description:</label>
                    <input type="text" id="descriptionSearch" class="form-control" placeholder="Package description..." />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Start Date (Created):</label>
                    <input type="date" id="startDate" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label for="endDate" class="form-label">End Date (Created):</label>
                    <input type="date" id="endDate" class="form-control" />
                </div>
            </div>

            <div class="table-responsive">
                <table style="width: 100%;" id="contractTable" class="table table-hover table-striped table-bordered display nowrap">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Validity</th>
                            <th>Person ID</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Modal {
    <!-- Create Modal -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Contract</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Create" asp-controller="Contract" method="post" id="createForm">
                    <div class="modal-body">
                        <div class="form-group">
                            <label asp-for="Contract.Name">Contract Name<span class="text-danger">*</span></label>
                            <input asp-for="Contract.Name" class="form-control" />
                            <span asp-validation-for="Contract.Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Contract.Description">Contract Description</label>
                            <input asp-for="Contract.Description" class="form-control" />
                            <span asp-validation-for="Contract.Description" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Contract.Validity">Contract Validity (MM/dd/yyyy)<span class="text-danger">*</span></label>
                            <input asp-for="Contract.Validity" type="date" class="form-control" />
                            <span asp-validation-for="Contract.Validity" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Contract.PersonId">Select Person<span class="text-danger">*</span></label>
                            <select asp-for="Contract.PersonId" class="form-control" asp-items="Model.PersonList">
                                <option value="">-- Select Person --</option>
                            </select>
                            <span asp-validation-for="Contract.PersonId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button id="createAddFormSubmitBtn" type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Update Modal -->
    <div class="modal fade" id="updateModal" tabindex="-1" role="dialog"
         aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Update Contract</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Update" asp-controller="Contract" method="post" id="updateForm">
                    <div class="modal-body">
                        <input type="hidden" asp-for="Contract.Id" />

                        <div class="form-group">
                            <label asp-for="Contract.Name" class="control-label">Contract Name<span class="text-danger">*</span></label>
                            <input asp-for="Contract.Name" class="form-control" />
                            <span asp-validation-for="Contract.Name" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Contract.Description" class="control-label">Contract Description</label>
                            <input asp-for="Contract.Description" class="form-control" />
                            <span asp-validation-for="Contract.Description" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Contract.Validity">Contract Validity (MM/dd/yyyy)<span class="text-danger">*</span></label>
                            <input asp-for="Contract.Validity" type="date" class="form-control" />
                            <span asp-validation-for="Contract.Validity" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Contract.PersonId" class="control-label">Select Person<span class="text-danger">*</span></label>
                            <select asp-for="Contract.PersonId" class="form-control" asp-items="Model.PersonList">
                                <option value="">-- Select Person --</option>
                            </select>
                            <span asp-validation-for="Contract.PersonId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" id="createEditFormSubmitBtn" class="btn btn-primary">
                            Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Unlock Modal -->
    <div class="modal fade" id="unlockModal" tabindex="-1" role="dialog" aria-labelledby="unlockModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="unlockForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="unlockModalLabel">Unlock Contract</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="unlockContractId" />
                        <div class="mb-3">
                            <label for="unlockKey" class="form-label">Enter Unlock Key</label>
                            <input type="password" class="form-control" id="unlockKey" required />
                            <div id="unlockError" class="text-danger mt-2" style="display:none;"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Unlock</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/validation.js"></script>
    <script src="~/js/formSubmissionAjax.js"></script>
    <script src="~/js/ContractScripts/contract-data-table.js"></script>
    <script src="~/js/deleteGeneralSettings.js"></script>
    <script src="~/js/ContractScripts/contract-export.js"></script>
    <script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>

    <script>
        const chartOptions = {
            annual: [
                { value: "bar", text: "Bar" },
                { value: "line", text: "Line" }
            ],
            monthly: [
                { value: "pie", text: "Pie" },
                { value: "doughnut", text: "Doughnut" },
                { value: "monthly-bar", text: "Bar" },
                { value: "monthly-line", text: "Line" }
            ]
        };

        function loadBarOrLineChart(chartType) {
            $("#ChartView").show().html('<canvas id="myChart" style="max-width:750px; max-height:400px;"></canvas>');

            $.ajax({
                type: "POST",
                url: "/Admin/Contract/GetContractsPerYear",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var labels = data[0];
                    var values = data[1];

                    const colors = [
                        "#007bff", "#28a745", "#dc3545", "#ffc107", "#17a2b8",
                        "#6c757d", "#fd7e14", "#20c997", "#6f42c1", "#e83e8c",
                        "#6610f2", "#343a40"
                    ];

                    let datasets = (chartType === 'line') ? [{
                        label: 'Contracts Per Year',
                        data: values,
                        borderColor: "#007bff",
                        backgroundColor: "#007bff",
                        fill: false,
                        tension: 0.1
                    }] : labels.map((label, index) => ({
                        label: label,
                        data: labels.map((_, i) => i === index ? values[index] : null),
                        backgroundColor: colors[index % colors.length],
                        borderColor: colors[index % colors.length],
                        fill: true
                    }));

                    new Chart(document.getElementById("myChart"), {
                        type: chartType,
                        data: { labels, datasets },
                        options: {
                            responsive: true,
                            interaction: { mode: 'index', intersect: false },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: { precision: 0 },
                                    title: { display: true, text: 'Number of Contracts' }
                                },
                                x: { title: { display: true, text: 'Year' } }
                            },
                            plugins: {
                                title: { display: true, text: `Contracts from ${labels[0]} to ${labels[labels.length - 1]}` },
                                legend: {
                                    display: true,
                                    onClick: function (e, legendItem, legend) {
                                        if (legend.chart.config.type === 'line') return;
                                        const index = legendItem.datasetIndex;
                                        const meta = legend.chart.getDatasetMeta(index);
                                        meta.hidden = meta.hidden === null ? !legend.chart.data.datasets[index].hidden : null;
                                        legend.chart.update();
                                    }
                                }
                            }
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error loading bar/line data:", error);
                }
            });
        }

        function loadPieOrDoughnutChart(chartType) {
            $("#ChartView").show().html('<canvas id="myChart" style="max-width:750px; max-height:400px;"></canvas>');

            $.ajax({
                type: "POST",
                url: "/Admin/Contract/GetContractsPerMonth",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var labels = data[0];
                    var values = data[1];
                    var pieColors = [
                        "#007bff", "#28a745", "#dc3545", "#ffc107", "#17a2b8",
                        "#6c757d", "#fd7e14", "#20c997", "#6f42c1", "#e83e8c",
                        "#6610f2", "#343a40"
                    ];

                    new Chart(document.getElementById("myChart"), {
                        type: chartType,
                        data: {
                            labels,
                            datasets: [{
                                backgroundColor: pieColors,
                                data: values
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                title: { display: true, text: 'Contracts Per Person' },
                                legend: { display: true }
                            }
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error loading pie/doughnut data:", error);
                }
            });
        }

        function loadMonthlyBarOrLineChart(chartType) {
            $("#ChartView").show().html('<canvas id="myChart" style="max-width:750px; max-height:400px;"></canvas>');

            $.ajax({
                type: "POST",
                url: "/Admin/Contract/GetContractsPerMonth",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var labels = data[0];
                    var values = data[1];

                    const colors = [
                        "#007bff", "#28a745", "#dc3545", "#ffc107", "#17a2b8",
                        "#6c757d", "#fd7e14", "#20c997", "#6f42c1", "#e83e8c",
                        "#6610f2", "#343a40"
                    ];

                    let dataset = {
                        label: 'Contracts Per Month',
                        data: values,
                        backgroundColor: chartType === 'monthly-bar' ? colors : "#007bff",
                        borderColor: "#007bff",
                        fill: chartType === 'monthly-line' ? false : true,
                        tension: chartType === 'monthly-line' ? 0.1 : undefined
                    };

                    new Chart(document.getElementById("myChart"), {
                        type: chartType === 'monthly-bar' ? 'bar' : 'line',
                        data: { labels, datasets: [dataset] },
                        options: {
                            responsive: true,
                            interaction: { mode: 'index', intersect: false },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: { precision: 0 },
                                    title: { display: true, text: 'Number of Contracts' }
                                },
                                x: { title: { display: true, text: 'Month' } }
                            },
                            plugins: {
                                title: { display: true, text: 'Monthly Contracts Overview' },
                                legend: { display: true }
                            }
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error loading monthly bar/line data:", error);
                }
            });
        }

        $(function () {
            // Handle category change
            $('#ChartCategory').on('change', function () {
                const category = $(this).val();
                const $chartType = $('#ChartType');
                $chartType.empty().append('<option selected>--Select Type--</option>');

                if (chartOptions[category]) {
                    $chartType.prop('disabled', false);
                    chartOptions[category].forEach(opt => {
                        $chartType.append(new Option(opt.text, opt.value));
                    });
                } else {
                    $chartType.prop('disabled', true);
                }
            });

            $("#ShowGraphBtn").click(function () {
                var chartType = $("#ChartType").val();
                var category = $("#ChartCategory").val();

                if (!chartType || chartType.startsWith('--')) {
                    alert("Please select a valid chart type.");
                    return;
                }

                if (category === "annual") {
                    loadBarOrLineChart(chartType);
                } else if (category === "monthly") {
                    if (chartType === "pie" || chartType === "doughnut") {
                        loadPieOrDoughnutChart(chartType);
                    } else if (chartType === "monthly-bar" || chartType === "monthly-line") {
                        loadMonthlyBarOrLineChart(chartType);
                    } else {
                        alert("Unsupported monthly chart type.");
                    }
                } else {
                    alert("Please select a valid chart category.");
                }
            });

            $("#RemoveGraphBtn").click(function () {
                $("#ChartView").hide().html('');
            });
        });
    </script>

}
